#!/bin/bash
#-----------------------------------------------------------------------------------------------------------#
#   Default Kafka Configurations 
#-----------------------------------------------------------------------------------------------------------#
#   Verify Java version - must be Java 1.8
#-----------------------------------------------------------------------------------------------------------#
function verify_java_version() {

    if type -p java; then
        echo Found java executable in PATH
        _java=java
    elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
        echo Found java executable in JAVA_HOME     
        _java="$JAVA_HOME/bin/java"
    else
        echo "No Java installed"
        exit 1
    fi
    
    if [[ "$_java" ]]; then
        version=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
        echo Java Version "$version" installed
        if [[ ! "$version" > "1.7" ]]; then
            echo Java 1.8 is required
            exit 1
        fi
    fi

}


#############################################################################################################
case "$1" in

#-------------------------------------------------------------------------------------------------------------------------#
# bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic my-replicated-topic
#-------------------------------------------------------------------------------------------------------------------------#
topic-create)

    set -x
    # export ZOOKEEPER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' zookeeper)
    # docker exec -it broker bash -c "/usr/bin/kafka-topics --create --zookeeper ${ZOOKEEPER}:2181 --replication-factor 1 --partitions 1 --topic ${2}"

    export ZOOKEEPER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kafka-docker_zookeeper_1)
    docker exec -it kafka-docker_kafka_1 bash -c "/usr/bin/kafka-topics --create --zookeeper ${ZOOKEEPER}:2181 --replication-factor 1 --partitions 1 --topic ${2}"
    set +x
;;
#-----------------------------------------------------------------------------------------------------------#
topic-list)

    set -x
    export ZOOKEEPER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kafka-docker_zookeeper_1)
    docker exec -it kafka-docker_kafka_1 bash -c "/opt/kafka/bin/kafka-topics.sh  --list --zookeeper ${ZOOKEEPER}:2181"
    set +x
;;
#-----------------------------------------------------------------------------------------------------------#
# Run the container
#-----------------------------------------------------------------------------------------------------------#
bash)

    docker exec -it ${2} /bin/bash
;;
#-----------------------------------------------------------------------------------------------------------#
#   Run Maven Kafka Application 
#-----------------------------------------------------------------------------------------------------------#
go)
    mvn exec:java -Dexec.mainClass=luzbetak.App
;;

#-----------------------------------------------------------------------------------------------------------#
#   CompileMave Kafka Application
#-----------------------------------------------------------------------------------------------------------#
make)

    mvn clean package
;;

#-----------------------------------------------------------------------------------------------------------#
#   Start Docker Kafka 
#-----------------------------------------------------------------------------------------------------------#
ip)

    # export CONTROL_CENTER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' control-center)
    # export BROKER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' broker)
    # export ZOOKEEPER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' zookeeper)
    # export KAFKA=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kafka-docker_kafka_1)

    # echo "+--------------------------------------------------+"
    # echo "| Control Center: http://${CONTROL_CENTER}:9021     " 
    # echo "+--------------------------------------------------+"
    # echo "| BROKER      = $BROKER                             "
    # echo "| KAFKA       = $KAFKA                              "
    # echo "| ZOOKEEPER   = $ZOOKEEPER                          "  
    # echo "+--------------------------------------------------+"
    export CONTAINER=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${2})
    echo $CONTAINER

;;
#-----------------------------------------------------------------------------------------------------------#
#                                   Main Menu 
#-----------------------------------------------------------------------------------------------------------#
*)
    echo "+-----------------------------------------------------------------------------------+"
    echo "|  ./run                         -- Help Conflunt Kafka Help                        |"
    echo "+-----------------------------------------------------------------------------------+"
    echo "|  ./run topic-create <name>     -- Create Kafka Topic                              |"
    echo "+-----------------------------------------------------------------------------------+"
    echo "|  ./run make                    -- Compile application                             |"
    echo "|  ./run go                      -- Run application                                 |"
    echo "+-----------------------------------------------------------------------------------+"
    echo "|  ./run bash <container>        -- Go to Bash                                      |"
    echo "|  ./run ip   <container>        -- Get Docker IP Address                           |"
    echo "+-----------------------------------------------------------------------------------+"
;;

esac
#############################################################################################################

exit 0

